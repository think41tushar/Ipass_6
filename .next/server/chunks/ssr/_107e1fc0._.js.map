{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/itish/Documents/new-client/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,2JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,qIAAA,CAAA,OAAI,AAAD,EAAE;AACtB","debugId":null}},
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["file:///home/itish/Documents/new-client/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Card({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card\"\n      className={cn(\n        \"bg-card text-card-foreground flex flex-col gap-6 rounded-xl border py-6 shadow-sm\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardHeader({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-header\"\n      className={cn(\n        \"@container/card-header grid auto-rows-min grid-rows-[auto_auto] items-start gap-1.5 px-6 has-data-[slot=card-action]:grid-cols-[1fr_auto] [.border-b]:pb-6\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardTitle({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-title\"\n      className={cn(\"leading-none font-semibold\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardDescription({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-description\"\n      className={cn(\"text-muted-foreground text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardAction({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-action\"\n      className={cn(\n        \"col-start-2 row-span-2 row-start-1 self-start justify-self-end\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardContent({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-content\"\n      className={cn(\"px-6\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardFooter({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-footer\"\n      className={cn(\"flex items-center px-6 [.border-t]:pt-6\", className)}\n      {...props}\n    />\n  )\n}\n\nexport {\n  Card,\n  CardHeader,\n  CardFooter,\n  CardTitle,\n  CardAction,\n  CardDescription,\n  CardContent,\n}\n"],"names":[],"mappings":";;;;;;;;;;AAEA;;;AAEA,SAAS,KAAK,EAAE,SAAS,EAAE,GAAG,OAAoC;IAChE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,qFACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,8JACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,UAAU,EAAE,SAAS,EAAE,GAAG,OAAoC;IACrE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,gBAAgB,EAAE,SAAS,EAAE,GAAG,OAAoC;IAC3E,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,kEACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,YAAY,EAAE,SAAS,EAAE,GAAG,OAAoC;IACvE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,QAAQ;QACrB,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,2CAA2C;QACxD,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 120, "column": 0}, "map": {"version":3,"sources":["file:///home/itish/Documents/new-client/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-all disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 shrink-0 [&_svg]:shrink-0 outline-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-primary text-primary-foreground shadow-xs hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-white shadow-xs hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\n        outline:\n          \"border bg-background shadow-xs hover:bg-accent hover:text-accent-foreground dark:bg-input/30 dark:border-input dark:hover:bg-input/50\",\n        secondary:\n          \"bg-secondary text-secondary-foreground shadow-xs hover:bg-secondary/80\",\n        ghost:\n          \"hover:bg-accent hover:text-accent-foreground dark:hover:bg-accent/50\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2 has-[>svg]:px-3\",\n        sm: \"h-8 rounded-md gap-1.5 px-3 has-[>svg]:px-2.5\",\n        lg: \"h-10 rounded-md px-6 has-[>svg]:px-4\",\n        icon: \"size-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nfunction Button({\n  className,\n  variant,\n  size,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"button\"> &\n  VariantProps<typeof buttonVariants> & {\n    asChild?: boolean\n  }) {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      data-slot=\"button\"\n      className={cn(buttonVariants({ variant, size, className }))}\n      {...props}\n    />\n  )\n}\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AACA;AACA;AAEA;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACvB,+bACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,aACE;YACF,SACE;YACF,WACE;YACF,OACE;YACF,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AAGF,SAAS,OAAO,EACd,SAAS,EACT,OAAO,EACP,IAAI,EACJ,UAAU,KAAK,EACf,GAAG,OAIF;IACD,MAAM,OAAO,UAAU,gKAAA,CAAA,OAAI,GAAG;IAE9B,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACvD,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 177, "column": 0}, "map": {"version":3,"sources":["file:///home/itish/Documents/new-client/components/ui/tabs.tsx"],"sourcesContent":["\"use client\";\n\nimport * as React from \"react\";\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\";\n\nimport { cn } from \"@/lib/utils\";\n\nfunction Tabs({\n  className,\n  ...props\n}: React.ComponentProps<typeof TabsPrimitive.Root>) {\n  return (\n    <TabsPrimitive.Root\n      data-slot=\"tabs\"\n      className={cn(\"flex flex-col gap-2\", className)}\n      {...props}\n    />\n  );\n}\n\nfunction TabsList({\n  className,\n  ...props\n}: React.ComponentProps<typeof TabsPrimitive.List>) {\n  return (\n    <TabsPrimitive.List\n      data-slot=\"tabs-list\"\n      className={cn(\n        \"bg-muted text-white inline-flex h-9 w-fit items-center justify-center rounded-lg p-[3px]\",\n        className\n      )}\n      {...props}\n    />\n  );\n}\n\nfunction TabsTrigger({\n  className,\n  ...props\n}: React.ComponentProps<typeof TabsPrimitive.Trigger>) {\n  return (\n    <TabsPrimitive.Trigger\n      data-slot=\"tabs-trigger\"\n      className={cn(\n        \"data-[state=active]:bg-foreground dark:data-[state=active]:text-black focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:outline-ring dark:data-[state=active]:border-input dark:data-[state=active]:bg-white text-black dark:text-muted-foreground inline-flex h-[calc(100%-1px)] flex-1 items-center justify-center gap-1.5 rounded-md border border-transparent px-2 py-1 text-sm font-medium whitespace-nowrap transition-[color,box-shadow] focus-visible:ring-[3px] focus-visible:outline-1 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:shadow-sm [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\",\n        className\n      )}\n      {...props}\n    />\n  );\n}\n\nfunction TabsContent({\n  className,\n  ...props\n}: React.ComponentProps<typeof TabsPrimitive.Content>) {\n  return (\n    <TabsPrimitive.Content\n      data-slot=\"tabs-content\"\n      className={cn(\"flex-1 outline-none\", className)}\n      {...props}\n    />\n  );\n}\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent };\n"],"names":[],"mappings":";;;;;;;AAGA;AAEA;AALA;;;;AAOA,SAAS,KAAK,EACZ,SAAS,EACT,GAAG,OAC6C;IAChD,qBACE,8OAAC,gKAAA,CAAA,OAAkB;QACjB,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,uBAAuB;QACpC,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,SAAS,EAChB,SAAS,EACT,GAAG,OAC6C;IAChD,qBACE,8OAAC,gKAAA,CAAA,OAAkB;QACjB,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,4FACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,YAAY,EACnB,SAAS,EACT,GAAG,OACgD;IACnD,qBACE,8OAAC,gKAAA,CAAA,UAAqB;QACpB,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,spBACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,YAAY,EACnB,SAAS,EACT,GAAG,OACgD;IACnD,qBACE,8OAAC,gKAAA,CAAA,UAAqB;QACpB,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,uBAAuB;QACpC,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 241, "column": 0}, "map": {"version":3,"sources":["file:///home/itish/Documents/new-client/lib/taskUtil.ts"],"sourcesContent":["// src/lib/utils/taskUtils.ts\nimport { getStatusColor, getStatusIcon } from \"@/lib/renderUtils\";\n\nexport const saveTasksToLocalStorage = (tasks: any[]) => {\n  localStorage.setItem(\"scheduledTasks\", JSON.stringify(tasks));\n};\n\nexport const loadTasksFromLocalStorage = () => {\n  const savedTasks = localStorage.getItem(\"scheduledTasks\");\n  if (savedTasks) {\n    try {\n      const parsedTasks = JSON.parse(savedTasks);\n      return parsedTasks.map((task: any) => ({\n        ...task,\n        dateTime: new Date(task.dateTime),\n      }));\n    } catch (error) {\n      console.error(\"Failed to parse saved tasks:\", error);\n      return [];\n    }\n  }\n  return [];\n};"],"names":[],"mappings":"AAAA,6BAA6B;;;;;AAGtB,MAAM,0BAA0B,CAAC;IACtC,aAAa,OAAO,CAAC,kBAAkB,KAAK,SAAS,CAAC;AACxD;AAEO,MAAM,4BAA4B;IACvC,MAAM,aAAa,aAAa,OAAO,CAAC;IACxC,IAAI,YAAY;QACd,IAAI;YACF,MAAM,cAAc,KAAK,KAAK,CAAC;YAC/B,OAAO,YAAY,GAAG,CAAC,CAAC,OAAc,CAAC;oBACrC,GAAG,IAAI;oBACP,UAAU,IAAI,KAAK,KAAK,QAAQ;gBAClC,CAAC;QACH,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,gCAAgC;YAC9C,OAAO,EAAE;QACX;IACF;IACA,OAAO,EAAE;AACX","debugId":null}},
    {"offset": {"line": 271, "column": 0}, "map": {"version":3,"sources":["file:///home/itish/Documents/new-client/lib/usePromptScheduler.ts"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { format } from \"date-fns\";\nimport type { DateRange } from \"react-day-picker\";\nimport { useParams } from \"next/navigation\";\nimport {\n  ScheduledTask,\n  RecurrenceType\n} from \"@/lib/types\";\nimport {\n  loadTasksFromLocalStorage,\n  saveTasksToLocalStorage\n} from \"@/lib/taskUtil\";\n\nexport const usePromptScheduler = () => {\n  const params = useParams(); // Move useParams inside the hook\n  const [date, setDate] = useState<DateRange | undefined>(undefined);\n  const [time, setTime] = useState(\"12:00\");\n  const [recurrence, setRecurrence] = useState<RecurrenceType>(\"none\");\n  const [prompt, setPrompt] = useState(\"\");\n  const [tasks, setTasks] = useState<ScheduledTask[]>([]);\n  const [logs, setLogs] = useState<string[]>([]);\n  const [result, setResult] = useState<string | null>(null);\n  const [activeTab, setActiveTab] = useState(\"prompt\");\n  const [isExecuting, setIsExecuting] = useState(false);\n  const [isConnected, setIsConnected] = useState(false);\n  const [session_id, setSession_id] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [isSSEconnected, setIsSSEconnected] = useState(false);\n  const [promptResponse, setPromptResponse] = useState(\"\");\n\n  // Load tasks from localStorage on component mount\n  useEffect(() => {\n    const loadedTasks = loadTasksFromLocalStorage();\n    setTasks(loadedTasks);\n  }, []);\n\n  // Save tasks to localStorage whenever they change\n  useEffect(() => {\n    saveTasksToLocalStorage(tasks);\n  }, [tasks]);\n\n  const addLog = (message: string) => {\n    const timestamp = format(new Date(), \"HH:mm:ss\");\n    setLogs((prev) => [...prev, `[${timestamp}] ${message}`]);\n  };\n\n  const handleExecute = () => {\n    if (!prompt.trim()) {\n      addLog(\"Error: Prompt cannot be empty\");\n      return;\n    }\n    setIsExecuting(true);\n    setResult(null);\n    setLogs([]);\n    addLog(\"Executing prompt...\");\n\n    // Simulate execution with a delay\n    setTimeout(() => {\n      addLog(\"Processing input...\");\n      setTimeout(() => {\n        addLog(\"Generating response...\");\n        setTimeout(() => {\n          setIsExecuting(false);\n          setResult(\"This is a simulated result for the prompt: \" + prompt);\n          addLog(\"Execution completed successfully\");\n          setActiveTab(\"result\");\n        }, 1000);\n      }, 800);\n    }, 500);\n  };\n\n  const handleSchedule = async () => {\n    if (!prompt.trim()) {\n      addLog(\"Error: Prompt cannot be empty\");\n      return;\n    }\n    if (!date || !date.from) {\n      addLog(\"Error: Date must be selected\");\n      return;\n    }\n    const [hours, minutes] = time.split(\":\").map(Number);\n    const scheduledDateTime = new Date(date.from);\n    scheduledDateTime.setHours(hours, minutes);\n    \n    if (scheduledDateTime < new Date()) {\n      addLog(\"Error: Cannot schedule for a past date/time\");\n      return;\n    }\n  \n    // Function to generate random string\n    const getRandomString = (length: number) => {\n      return [...Array(length)].map(() => Math.random().toString(36)[2]).join(\"\");\n    };\n    const djangoUrl = \"http://ec2-3-91-217-18.compute-1.amazonaws.com:8000\";\n    const tenant_id=localStorage.getItem(\"tenant_id\");\n    const user_id=localStorage.getItem(\"user_id\"); // Assuming you're using useParams from earlier\n    const sessid = getRandomString(10);\n  \n    try {\n      const schedulePayload = {\n        \"execution_time\": scheduledDateTime.toISOString(),\n        \"is_recurring\": recurrence !== \"none\", // Convert to boolean\n        \"user_id\": user_id,\n        \"input\": prompt,\n        \"session_id\": sessid,\n        \"rerun\": false,\n        \"history\": [],\n        \"changed\": false,\n        // Only include these if is_recurring is true\n        ...(recurrence !== \"none\" && {\n          recurrence_type: recurrence,\n          // Add additional recurrence details as needed\n          ...(recurrence === \"weekly\" && { days_of_week: [scheduledDateTime.getDay()] }),\n          ...(recurrence === \"monthly\" && { days_of_month: [scheduledDateTime.getDate()] }),\n          // ...(recurrence === \"yearly\" && { months: [scheduledDateTime.getMonth() + 1] })\n        })\n      };\n  \n      const response = await fetch(`${djangoUrl}/schedule/prompt/`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(schedulePayload)\n      });\n  \n      if (!response.ok) {\n        throw new Error(\"Failed to schedule task\");\n      }\n  \n      const result = await response.json();\n      console.log(\"Task scheduled successfully:\", result);\n  \n      const newTask: ScheduledTask = {\n        id: sessid,\n        prompt,\n        dateTime: scheduledDateTime,\n        recurrence,\n        status: \"pending\",\n      };\n  \n      setTasks([...tasks, newTask]);\n      addLog(`Task scheduled for ${format(scheduledDateTime, \"PPpp\")}`);\n      setPrompt(\"\");\n      setActiveTab(\"scheduled\");\n    } catch (error) {\n      console.error(\"Scheduling error:\", error);\n      addLog(`Error scheduling task: ${error instanceof Error ? error.message : 'Unknown error'}`);\n    }\n  };\n\n  const deleteTask = (id: string) => {\n    setTasks(tasks.filter((task) => task.id !== id));\n  };\n\n  const handleConnect = async () => {\n    try {\n      const { tenant_id} = params; \n      const user_id=localStorage.getItem(\"user_id\");\n      console.log(\"This is the user_id: \",user_id)\n      // Use params here\n      const response = await fetch(`http://ec2-3-91-217-18.compute-1.amazonaws.com:8000/schedule/${tenant_id}/send-refresh-token/`, {\n        method: \"POST\",\n        headers: {\n          \"Content-type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          \"user_id\": user_id\n        })\n      });\n      if (!response.ok) {\n        throw new Error(\"Failed to connect\");\n      }\n      console.log(\"Connected successfully\");\n      setIsConnected(true);\n    } catch (error: any) {\n      setError(\"Failed to connect: \" + error.message);\n    }\n  };\n\n  const resetForm = () => {\n    setPrompt(\"\");\n    setDate({ from: new Date(), to: new Date() });\n    setTime(\"12:00\");\n    setRecurrence(\"none\");\n  };\n\n  return {\n    date,\n    setDate,\n    time,\n    setTime,\n    recurrence,\n    setRecurrence,\n    isSSEconnected,\n    setIsSSEconnected,\n    session_id,\n    setSession_id,\n    prompt,\n    setPrompt,\n    tasks,\n    promptResponse,\n    setPromptResponse,\n    logs,\n    setLogs,\n    result,\n    activeTab,\n    error,\n    setError,\n    setActiveTab,\n    isExecuting,\n    isConnected,\n    addLog,\n    handleExecute,\n    handleSchedule,\n    deleteTask,\n    handleConnect,\n    resetForm,\n  };\n};"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 497, "column": 0}, "map": {"version":3,"sources":["file:///home/itish/Documents/new-client/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Input({ className, type, ...props }: React.ComponentProps<\"input\">) {\n  return (\n    <input\n      type={type}\n      data-slot=\"input\"\n      className={cn(\n        \"file:text-foreground placeholder:text-muted-foreground selection:bg-primary selection:text-primary-foreground dark:bg-input/30 border-input flex h-9 w-full min-w-0 rounded-md border bg-transparent px-3 py-1 text-base shadow-xs transition-[color,box-shadow] outline-none file:inline-flex file:h-7 file:border-0 file:bg-transparent file:text-sm file:font-medium disabled:pointer-events-none disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        \"focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px]\",\n        \"aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Input }\n"],"names":[],"mappings":";;;;AAEA;;;AAEA,SAAS,MAAM,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAsC;IACzE,qBACE,8OAAC;QACC,MAAM;QACN,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,mcACA,iFACA,0GACA;QAED,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 523, "column": 0}, "map": {"version":3,"sources":["file:///home/itish/Documents/new-client/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Label({\n  className,\n  ...props\n}: React.ComponentProps<typeof LabelPrimitive.Root>) {\n  return (\n    <LabelPrimitive.Root\n      data-slot=\"label\"\n      className={cn(\n        \"flex items-center gap-2 text-sm leading-none font-medium select-none group-data-[disabled=true]:pointer-events-none group-data-[disabled=true]:opacity-50 peer-disabled:cursor-not-allowed peer-disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Label }\n"],"names":[],"mappings":";;;;AAGA;AAEA;AALA;;;;AAOA,SAAS,MAAM,EACb,SAAS,EACT,GAAG,OAC8C;IACjD,qBACE,8OAAC,iKAAA,CAAA,OAAmB;QAClB,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,uNACA;QAED,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 551, "column": 0}, "map": {"version":3,"sources":["file:///home/itish/Documents/new-client/components/ui/textarea.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Textarea({ className, ...props }: React.ComponentProps<\"textarea\">) {\n  return (\n    <textarea\n      data-slot=\"textarea\"\n      className={cn(\n        \"border-input placeholder:text-muted-foreground focus-visible:border-ring focus-visible:ring-ring/50 aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive dark:bg-input/30 flex field-sizing-content min-h-16 w-full rounded-md border bg-transparent px-3 py-2 text-base shadow-xs transition-[color,box-shadow] outline-none focus-visible:ring-[3px] disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Textarea }\n"],"names":[],"mappings":";;;;AAEA;;;AAEA,SAAS,SAAS,EAAE,SAAS,EAAE,GAAG,OAAyC;IACzE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,ucACA;QAED,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 576, "column": 0}, "map": {"version":3,"sources":["file:///home/itish/Documents/new-client/components/ui/calendar.tsx"],"sourcesContent":["\"use client\";\n\nimport React, { useState, useEffect } from \"react\";\nimport { format } from \"date-fns\";\nimport { Label } from \"@/components/ui/label\";\nimport { Input } from \"@/components/ui/input\";\n\ninterface CalendarProps {\n  /** ISO-formatted date-time string (e.g., \"2025-03-20T10:49:00+05:30\") */\n  value: string;\n  /** Called when a new ISO date-time string is produced */\n  onChange: (newISO: string) => void;\n}\n\nconst Calendar: React.FC<CalendarProps> = ({ value, onChange }) => {\n  // Derive initial date and time values from the incoming ISO value (if provided)\n  const initialDate = value ? value.substring(0, 10) : \"\";\n  const initialTime = value ? value.substring(11, 16) : \"12:00\";\n  const [dateValue, setDateValue] = useState(initialDate);\n  const [timeValue, setTimeValue] = useState(initialTime);\n\n  // Whenever date or time changes, update the combined ISO value.\n  useEffect(() => {\n    if (dateValue && timeValue) {\n      // If time doesn't include seconds, append \":00\"\n      const timeWithSeconds = timeValue.length === 5 ? `${timeValue}:00` : timeValue;\n      const combinedISO = `${dateValue}T${timeWithSeconds}`;\n      const combinedDate = new Date(combinedISO);\n      // Format the date with timezone offset\n      const formatted = format(combinedDate, \"yyyy-MM-dd'T'HH:mm:ssXXX\");\n      onChange(formatted);\n    }\n  }, [dateValue, timeValue, onChange]);\n\n  return (\n    <div className=\"space-y-4\">\n      <div className=\"grid grid-cols-2 gap-4\">\n        <div>\n          <Label htmlFor=\"date\" className=\"text-slate-300\">\n            Date\n          </Label>\n          <Input\n            type=\"date\"\n            id=\"date\"\n            value={dateValue}\n            onChange={(e) => setDateValue(e.target.value)}\n            className=\"border-slate-700 bg-background text-white\"\n          />\n        </div>\n        {/* <div>\n          <Label htmlFor=\"time\" className=\"text-slate-300\">\n            Time\n          </Label>\n          <Input\n            type=\"time\"\n            id=\"time\"\n            value={timeValue}\n            onChange={(e) => setTimeValue(e.target.value)}\n            className=\"border-slate-700 bg-background text-white\"\n          />\n        </div> */}\n      </div>\n      {dateValue && timeValue && (\n        <div className=\"mt-2 text-slate-300\">\n          Execution Time: <span className=\"font-mono\">{value}</span>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Calendar;\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;AALA;;;;;;AAcA,MAAM,WAAoC,CAAC,EAAE,KAAK,EAAE,QAAQ,EAAE;IAC5D,gFAAgF;IAChF,MAAM,cAAc,QAAQ,MAAM,SAAS,CAAC,GAAG,MAAM;IACrD,MAAM,cAAc,QAAQ,MAAM,SAAS,CAAC,IAAI,MAAM;IACtD,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC3C,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAE3C,gEAAgE;IAChE,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,IAAI,aAAa,WAAW;YAC1B,gDAAgD;YAChD,MAAM,kBAAkB,UAAU,MAAM,KAAK,IAAI,GAAG,UAAU,GAAG,CAAC,GAAG;YACrE,MAAM,cAAc,GAAG,UAAU,CAAC,EAAE,iBAAiB;YACrD,MAAM,eAAe,IAAI,KAAK;YAC9B,uCAAuC;YACvC,MAAM,YAAY,CAAA,GAAA,qJAAA,CAAA,SAAM,AAAD,EAAE,cAAc;YACvC,SAAS;QACX;IACF,GAAG;QAAC;QAAW;QAAW;KAAS;IAEnC,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC;;sCACC,8OAAC,0HAAA,CAAA,QAAK;4BAAC,SAAQ;4BAAO,WAAU;sCAAiB;;;;;;sCAGjD,8OAAC,0HAAA,CAAA,QAAK;4BACJ,MAAK;4BACL,IAAG;4BACH,OAAO;4BACP,UAAU,CAAC,IAAM,aAAa,EAAE,MAAM,CAAC,KAAK;4BAC5C,WAAU;;;;;;;;;;;;;;;;;YAgBf,aAAa,2BACZ,8OAAC;gBAAI,WAAU;;oBAAsB;kCACnB,8OAAC;wBAAK,WAAU;kCAAa;;;;;;;;;;;;;;;;;;AAKvD;uCAEe","debugId":null}},
    {"offset": {"line": 682, "column": 0}, "map": {"version":3,"sources":["file:///home/itish/Documents/new-client/components/ui/popover.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as PopoverPrimitive from \"@radix-ui/react-popover\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Popover({\n  ...props\n}: React.ComponentProps<typeof PopoverPrimitive.Root>) {\n  return <PopoverPrimitive.Root data-slot=\"popover\" {...props} />\n}\n\nfunction PopoverTrigger({\n  ...props\n}: React.ComponentProps<typeof PopoverPrimitive.Trigger>) {\n  return <PopoverPrimitive.Trigger data-slot=\"popover-trigger\" {...props} />\n}\n\nfunction PopoverContent({\n  className,\n  align = \"center\",\n  sideOffset = 4,\n  ...props\n}: React.ComponentProps<typeof PopoverPrimitive.Content>) {\n  return (\n    <PopoverPrimitive.Portal>\n      <PopoverPrimitive.Content\n        data-slot=\"popover-content\"\n        align={align}\n        sideOffset={sideOffset}\n        className={cn(\n          \"bg-popover text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 z-50 w-72 origin-(--radix-popover-content-transform-origin) rounded-md border p-4 shadow-md outline-hidden\",\n          className\n        )}\n        {...props}\n      />\n    </PopoverPrimitive.Portal>\n  )\n}\n\nfunction PopoverAnchor({\n  ...props\n}: React.ComponentProps<typeof PopoverPrimitive.Anchor>) {\n  return <PopoverPrimitive.Anchor data-slot=\"popover-anchor\" {...props} />\n}\n\nexport { Popover, PopoverTrigger, PopoverContent, PopoverAnchor }\n"],"names":[],"mappings":";;;;;;;AAGA;AAEA;AALA;;;;AAOA,SAAS,QAAQ,EACf,GAAG,OACgD;IACnD,qBAAO,8OAAC,mKAAA,CAAA,OAAqB;QAAC,aAAU;QAAW,GAAG,KAAK;;;;;;AAC7D;AAEA,SAAS,eAAe,EACtB,GAAG,OACmD;IACtD,qBAAO,8OAAC,mKAAA,CAAA,UAAwB;QAAC,aAAU;QAAmB,GAAG,KAAK;;;;;;AACxE;AAEA,SAAS,eAAe,EACtB,SAAS,EACT,QAAQ,QAAQ,EAChB,aAAa,CAAC,EACd,GAAG,OACmD;IACtD,qBACE,8OAAC,mKAAA,CAAA,SAAuB;kBACtB,cAAA,8OAAC,mKAAA,CAAA,UAAwB;YACvB,aAAU;YACV,OAAO;YACP,YAAY;YACZ,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,keACA;YAED,GAAG,KAAK;;;;;;;;;;;AAIjB;AAEA,SAAS,cAAc,EACrB,GAAG,OACkD;IACrD,qBAAO,8OAAC,mKAAA,CAAA,SAAuB;QAAC,aAAU;QAAkB,GAAG,KAAK;;;;;;AACtE","debugId":null}},
    {"offset": {"line": 751, "column": 0}, "map": {"version":3,"sources":["file:///home/itish/Documents/new-client/components/ui/select.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { CheckIcon, ChevronDownIcon, ChevronUpIcon } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Select({\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Root>) {\n  return <SelectPrimitive.Root data-slot=\"select\" {...props} />\n}\n\nfunction SelectGroup({\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Group>) {\n  return <SelectPrimitive.Group data-slot=\"select-group\" {...props} />\n}\n\nfunction SelectValue({\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Value>) {\n  return <SelectPrimitive.Value data-slot=\"select-value\" {...props} />\n}\n\nfunction SelectTrigger({\n  className,\n  size = \"default\",\n  children,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Trigger> & {\n  size?: \"sm\" | \"default\"\n}) {\n  return (\n    <SelectPrimitive.Trigger\n      data-slot=\"select-trigger\"\n      data-size={size}\n      className={cn(\n        \"border-input data-[placeholder]:text-muted-foreground [&_svg:not([class*='text-'])]:text-muted-foreground focus-visible:border-ring focus-visible:ring-ring/50 aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive dark:bg-input/30 dark:hover:bg-input/50 flex w-fit items-center justify-between gap-2 rounded-md border bg-transparent px-3 py-2 text-sm whitespace-nowrap shadow-xs transition-[color,box-shadow] outline-none focus-visible:ring-[3px] disabled:cursor-not-allowed disabled:opacity-50 data-[size=default]:h-9 data-[size=sm]:h-8 *:data-[slot=select-value]:line-clamp-1 *:data-[slot=select-value]:flex *:data-[slot=select-value]:items-center *:data-[slot=select-value]:gap-2 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <SelectPrimitive.Icon asChild>\n        <ChevronDownIcon className=\"size-4 opacity-50\" />\n      </SelectPrimitive.Icon>\n    </SelectPrimitive.Trigger>\n  )\n}\n\nfunction SelectContent({\n  className,\n  children,\n  position = \"popper\",\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Content>) {\n  return (\n    <SelectPrimitive.Portal>\n      <SelectPrimitive.Content\n        data-slot=\"select-content\"\n        className={cn(\n          \"bg-popover text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 relative z-50 max-h-(--radix-select-content-available-height) min-w-[8rem] origin-(--radix-select-content-transform-origin) overflow-x-hidden overflow-y-auto rounded-md border shadow-md\",\n          position === \"popper\" &&\n            \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n          className\n        )}\n        position={position}\n        {...props}\n      >\n        <SelectScrollUpButton />\n        <SelectPrimitive.Viewport\n          className={cn(\n            \"p-1\",\n            position === \"popper\" &&\n              \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)] scroll-my-1\"\n          )}\n        >\n          {children}\n        </SelectPrimitive.Viewport>\n        <SelectScrollDownButton />\n      </SelectPrimitive.Content>\n    </SelectPrimitive.Portal>\n  )\n}\n\nfunction SelectLabel({\n  className,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Label>) {\n  return (\n    <SelectPrimitive.Label\n      data-slot=\"select-label\"\n      className={cn(\"text-muted-foreground px-2 py-1.5 text-xs\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SelectItem({\n  className,\n  children,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Item>) {\n  return (\n    <SelectPrimitive.Item\n      data-slot=\"select-item\"\n      className={cn(\n        \"focus:bg-accent focus:text-accent-foreground [&_svg:not([class*='text-'])]:text-muted-foreground relative flex w-full cursor-default items-center gap-2 rounded-sm py-1.5 pr-8 pl-2 text-sm outline-hidden select-none data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4 *:[span]:last:flex *:[span]:last:items-center *:[span]:last:gap-2\",\n        className\n      )}\n      {...props}\n    >\n      <span className=\"absolute right-2 flex size-3.5 items-center justify-center\">\n        <SelectPrimitive.ItemIndicator>\n          <CheckIcon className=\"size-4\" />\n        </SelectPrimitive.ItemIndicator>\n      </span>\n      <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n    </SelectPrimitive.Item>\n  )\n}\n\nfunction SelectSeparator({\n  className,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Separator>) {\n  return (\n    <SelectPrimitive.Separator\n      data-slot=\"select-separator\"\n      className={cn(\"bg-border pointer-events-none -mx-1 my-1 h-px\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SelectScrollUpButton({\n  className,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.ScrollUpButton>) {\n  return (\n    <SelectPrimitive.ScrollUpButton\n      data-slot=\"select-scroll-up-button\"\n      className={cn(\n        \"flex cursor-default items-center justify-center py-1\",\n        className\n      )}\n      {...props}\n    >\n      <ChevronUpIcon className=\"size-4\" />\n    </SelectPrimitive.ScrollUpButton>\n  )\n}\n\nfunction SelectScrollDownButton({\n  className,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.ScrollDownButton>) {\n  return (\n    <SelectPrimitive.ScrollDownButton\n      data-slot=\"select-scroll-down-button\"\n      className={cn(\n        \"flex cursor-default items-center justify-center py-1\",\n        className\n      )}\n      {...props}\n    >\n      <ChevronDownIcon className=\"size-4\" />\n    </SelectPrimitive.ScrollDownButton>\n  )\n}\n\nexport {\n  Select,\n  SelectContent,\n  SelectGroup,\n  SelectItem,\n  SelectLabel,\n  SelectScrollDownButton,\n  SelectScrollUpButton,\n  SelectSeparator,\n  SelectTrigger,\n  SelectValue,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 976, "column": 0}, "map": {"version":3,"sources":["file:///home/itish/Documents/new-client/components/promptInputSection.tsx"],"sourcesContent":["import React, { useState, useCallback, useMemo } from \"react\";\nimport { format } from \"date-fns\";\nimport { CalendarIcon, RotateCcw, Play, LucideCalendar } from \"lucide-react\";\n\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport Calendar from \"@/components/ui/calendar\";\nimport {\n  Popover,\n  PopoverContent,\n  PopoverTrigger,\n} from \"@/components/ui/popover\";\nimport {\n  Select,\n  SelectTrigger,\n  SelectValue,\n  SelectContent,\n  SelectItem,\n} from \"@/components/ui/select\";\n\nimport { PromptInputSectionProps } from \"@/lib/types\";\n\n// Memoize Calendar to prevent unnecessary re-renders\nconst MemoizedCalendar = React.memo(Calendar);\n\nexport const PromptInputSection: React.FC<PromptInputSectionProps> = ({\n  date,\n  time,\n  recurrence,\n  prompt,\n  isExecuting,\n  setDate,\n  setTime,\n  setRecurrence,\n  setPrompt,\n  promptResponse,\n  setPromptResponse,\n  setLogs,\n  isSSEconnected,\n  setIsSSEconnected,\n  handleExecute,\n  handleSchedule,\n  handleRunTask,\n}) => {\n  const [executionTime, setExecutionTime] = useState(\"\");\n  \n  // Use useCallback to memoize the calendar change handler\n  const handleCalendarChange = useCallback((newISO: string) => {\n    const selectedDate = new Date(newISO);\n    setDate({ from: selectedDate, to: selectedDate });\n    setExecutionTime(newISO);\n  }, [setDate]);\n\n  // Memoize reset function to prevent unnecessary re-renders\n  const handleReset = useCallback(() => {\n    setPrompt(\"\");\n    setDate({ from: new Date(), to: new Date() });\n    setTime(\"12:00\");\n    setRecurrence(\"none\");\n    setExecutionTime(\"\");\n  }, [setPrompt, setDate, setTime, setRecurrence]);\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Date and Time Selection */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n        <div className=\"space-y-2\">\n          <Label htmlFor=\"date\" className=\"text-slate-300\">\n            Date\n          </Label>\n          <Popover>\n            <PopoverTrigger asChild>\n              <Button\n                variant=\"outline\"\n                className=\"justify-start text-left font-normal border-slate-700 bg-background hover:bg-slate-700 text-slate-300\"\n              >\n                <CalendarIcon className=\"mr-2 h-4 w-4 text-slate-400\" />\n                {date && date.from ? (\n                  format(date.from, \"PPP\")\n                ) : (\n                  <span>Pick a date</span>\n                )}{\" \"}\n              </Button>\n            </PopoverTrigger>\n            <PopoverContent className=\"w-auto p-0 border-slate-700 bg-background\">\n              <MemoizedCalendar\n                value={executionTime}\n                onChange={handleCalendarChange}\n              />\n            </PopoverContent>\n          </Popover>\n        </div>\n\n        <div className=\"space-y-2\">\n          <Label htmlFor=\"time\" className=\"text-slate-300\">\n            Time\n          </Label>\n          <div className=\"flex space-x-2\">\n            <Input\n              id=\"time\"\n              type=\"time\"\n              value={time}\n              onChange={(e) => setTime(e.target.value)}\n              className=\"border-slate-700 bg-background text-white\"\n            />\n\n            <Select\n              value={recurrence}\n              onValueChange={(value: any) => setRecurrence(value)}\n            >\n              <SelectTrigger className=\"w-[180px] border-slate-700 bg-background text-white\">\n                <SelectValue placeholder=\"Recurrence\" />\n              </SelectTrigger>\n              <SelectContent className=\"border-slate-700 bg-background text-white\">\n                <SelectItem value=\"none\">None</SelectItem>\n                <SelectItem value=\"daily\">Daily</SelectItem>\n                <SelectItem value=\"weekly\">Weekly</SelectItem>\n                <SelectItem value=\"monthly\">Monthly</SelectItem>\n              </SelectContent>\n            </Select>\n          </div>\n        </div>\n      </div>\n\n      {/* Prompt Input */}\n      <div className=\"space-y-2\">\n        <Label htmlFor=\"prompt\" className=\"text-slate-300\">\n          Prompt\n        </Label>\n        <Textarea\n          id=\"prompt\"\n          placeholder=\"Enter your prompt here...\"\n          value={prompt}\n          onChange={(e) => setPrompt(e.target.value)}\n          className=\"min-h-[120px] border-slate-700 bg-background text-white\"\n        />\n      </div>\n\n      {/* Action Buttons */}\n      <div className=\"flex justify-end space-x-3\">\n        <Button\n          variant=\"outline\"\n          className=\"border-slate-700 text-slate-300 hover:bg-background hover:text-white transition-all duration-300\"\n          onClick={handleReset}\n        >\n          <RotateCcw className=\"mr-2 h-4 w-4\" />\n          Reset\n        </Button>\n        <Button\n          variant=\"default\"\n          className=\"bg-emerald-700 hover:bg-emerald-600 text-white transition-all duration-300\"\n          onClick={() => {\n            handleRunTask(false);\n          }}\n          disabled={isExecuting || !prompt.trim()}\n        >\n          <Play className=\"mr-2 h-4 w-4\" />\n          Execute Now\n        </Button>\n\n        <Button\n          variant=\"default\"\n          className=\"bg-blue-700 hover:bg-blue-600 text-white transition-all duration-300\"\n          onClick={handleSchedule}\n          disabled={isExecuting || !prompt.trim() || !date || !time}\n        >\n          <LucideCalendar className=\"mr-2 h-4 w-4\" />\n          Schedule\n        </Button>\n      </div>\n    </div>\n  );\n};"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1335, "column": 0}, "map": {"version":3,"sources":["file:///home/itish/Documents/new-client/components/ui/scroll-area.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as ScrollAreaPrimitive from \"@radix-ui/react-scroll-area\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction ScrollArea({\n  className,\n  children,\n  ...props\n}: React.ComponentProps<typeof ScrollAreaPrimitive.Root>) {\n  return (\n    <ScrollAreaPrimitive.Root\n      data-slot=\"scroll-area\"\n      className={cn(\"relative\", className)}\n      {...props}\n    >\n      <ScrollAreaPrimitive.Viewport\n        data-slot=\"scroll-area-viewport\"\n        className=\"ring-ring/10 dark:ring-ring/20 dark:outline-ring/40 outline-ring/50 size-full rounded-[inherit] transition-[color,box-shadow] focus-visible:ring-4 focus-visible:outline-1\"\n      >\n        {children}\n      </ScrollAreaPrimitive.Viewport>\n      <ScrollBar />\n      <ScrollAreaPrimitive.Corner />\n    </ScrollAreaPrimitive.Root>\n  )\n}\n\nfunction ScrollBar({\n  className,\n  orientation = \"vertical\",\n  ...props\n}: React.ComponentProps<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>) {\n  return (\n    <ScrollAreaPrimitive.ScrollAreaScrollbar\n      data-slot=\"scroll-area-scrollbar\"\n      orientation={orientation}\n      className={cn(\n        \"flex touch-none p-px transition-colors select-none\",\n        orientation === \"vertical\" &&\n          \"h-full w-2.5 border-l border-l-transparent\",\n        orientation === \"horizontal\" &&\n          \"h-2.5 flex-col border-t border-t-transparent\",\n        className\n      )}\n      {...props}\n    >\n      <ScrollAreaPrimitive.ScrollAreaThumb\n        data-slot=\"scroll-area-thumb\"\n        className=\"bg-border relative flex-1 rounded-full\"\n      />\n    </ScrollAreaPrimitive.ScrollAreaScrollbar>\n  )\n}\n\nexport { ScrollArea, ScrollBar }\n"],"names":[],"mappings":";;;;;AAGA;AAEA;AALA;;;;AAOA,SAAS,WAAW,EAClB,SAAS,EACT,QAAQ,EACR,GAAG,OACmD;IACtD,qBACE,8OAAC,0KAAA,CAAA,OAAwB;QACvB,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QACzB,GAAG,KAAK;;0BAET,8OAAC,0KAAA,CAAA,WAA4B;gBAC3B,aAAU;gBACV,WAAU;0BAET;;;;;;0BAEH,8OAAC;;;;;0BACD,8OAAC,0KAAA,CAAA,SAA0B;;;;;;;;;;;AAGjC;AAEA,SAAS,UAAU,EACjB,SAAS,EACT,cAAc,UAAU,EACxB,GAAG,OACkE;IACrE,qBACE,8OAAC,0KAAA,CAAA,sBAAuC;QACtC,aAAU;QACV,aAAa;QACb,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,sDACA,gBAAgB,cACd,8CACF,gBAAgB,gBACd,gDACF;QAED,GAAG,KAAK;kBAET,cAAA,8OAAC,0KAAA,CAAA,kBAAmC;YAClC,aAAU;YACV,WAAU;;;;;;;;;;;AAIlB","debugId":null}},
    {"offset": {"line": 1405, "column": 0}, "map": {"version":3,"sources":["file:///home/itish/Documents/new-client/components/logsAndResultSection.tsx"],"sourcesContent":["// src/components/PromptScheduler/LogsAndResultSection.tsx\nimport React from \"react\";\nimport { motion, AnimatePresence } from \"framer-motion\";\n\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport { ScrollArea } from \"@/components/ui/scroll-area\";\nimport { Button } from \"./ui/button\";\n\ninterface LogsAndResultSectionProps {\n  logs: string[];\n  result: string | null;\n  isExecuting: boolean;\n  setUpdatedLogs: any;\n  updatedLogs: any;\n  handleRunTask: any;\n}\n\nexport const LogsAndResultSection: React.FC<LogsAndResultSectionProps> = ({\n  logs,\n  result,\n  isExecuting,\n  setUpdatedLogs,\n  updatedLogs,\n  handleRunTask,\n}) => {\n  return (\n    <div className=\"space-y-6\">\n      {/* Logs Section */}\n      <div className=\"space-y-2\">\n        <h3 className=\"text-lg font-medium text-slate-300\">Execution Logs</h3>\n        <Card className=\"border-background bg-background/30\">\n          <CardContent className=\"p-4\">\n            <ScrollArea className=\"h-[300px] p-4 border rounded\">\n              {logs.length > 0 ? (\n                <div className=\"space-y-1 font-mono pt-2 text-sm text-slate-300\">\n                  {logs.map((log, index) => {\n                    const isToolExecution = log.startsWith(\"Executing tool:\");\n                    let formattedLog = log;\n\n                    if (isToolExecution) {\n                      const match = log.match(/Params:\\s*(\\{[\\s\\S]*\\})/);\n                      if (match) {\n                        try {\n                          const parsedJson = JSON.parse(match[1]);\n                          const prettyJson = JSON.stringify(\n                            parsedJson,\n                            null,\n                            2\n                          );\n                          formattedLog = log.replace(match[1], prettyJson); // Replace raw JSON with formatted JSON\n                        } catch (error) {\n                          console.error(\"Invalid JSON:\", error);\n                        }\n                      }\n                    }\n\n                    return isToolExecution ? (\n                      <textarea\n                        key={index}\n                        value={\n                          updatedLogs[index] !== undefined\n                            ? updatedLogs[index]\n                            : formattedLog\n                        }\n                        className=\"w-full bg-background text-yellow-300 font-mono text-sm p-2 my-2 border border-yellow-500 rounded resize-y outline-none\"\n                        rows={Math.max(formattedLog.split(\"\\n\").length, 3)}\n                        onChange={(e) => {\n                          const newLogs = [...updatedLogs];\n                          newLogs[index] = e.target.value;\n                          setUpdatedLogs(newLogs);\n                        }}\n                      />\n                    ) : (\n                      <div\n                        key={index}\n                        className=\"border-l-2 border-slate-700 pl-3 py-1 my-2\"\n                      >\n                        {log}\n                      </div>\n                    );\n                  })}\n                </div>\n              ) : (\n                <div className=\"text-slate-500 italic text-center py-4\">\n                  No logs available. Execute a prompt to see logs.\n                </div>\n              )}\n            </ScrollArea>\n\n            <div className=\"flex justify-between\">\n              <div></div>\n              <Button\n                onClick={() => {\n                  handleRunTask(true);\n                }}\n                className=\"mt-4\"\n              >\n                Run Again ?\n              </Button>\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n\n      {/* Result Section */}\n      <div className=\"space-y-2\">\n        <h3 className=\"text-lg font-medium text-slate-300\">Result</h3>\n        <Card className=\"border-background bg-background/30\">\n          <CardContent className=\"p-4\">\n            <AnimatePresence mode=\"wait\">\n              {isExecuting ? (\n                <motion.div\n                  key=\"loading\"\n                  initial={{ opacity: 0 }}\n                  animate={{ opacity: 1 }}\n                  exit={{ opacity: 0 }}\n                  className=\"flex items-center justify-center py-8\"\n                >\n                  <div className=\"flex flex-col items-center\">\n                    <div className=\"h-8 w-8 rounded-full border-2 border-slate-600 border-t-blue-500 animate-spin mb-2\"></div>\n                    <p className=\"text-slate-400\">Processing prompt...</p>\n                  </div>\n                </motion.div>\n              ) : result ? (\n                <motion.div\n                  key=\"result\"\n                  initial={{ opacity: 0, y: 10 }}\n                  animate={{ opacity: 1, y: 0 }}\n                  transition={{ duration: 0.3 }}\n                  className=\"p-4 bg-background rounded-md border border-slate-700\"\n                >\n                  <pre className=\"whitespace-pre-wrap text-slate-300\">\n                    {result}\n                  </pre>\n                </motion.div>\n              ) : (\n                <motion.div\n                  key=\"empty\"\n                  initial={{ opacity: 0 }}\n                  animate={{ opacity: 1 }}\n                  className=\"text-slate-500 italic text-center py-8\"\n                >\n                  No result available. Execute a prompt to see results.\n                </motion.div>\n              )}\n            </AnimatePresence>\n          </CardContent>\n        </Card>\n      </div>\n    </div>\n  );\n};\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1671, "column": 0}, "map": {"version":3,"sources":["file:///home/itish/Documents/new-client/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center justify-center rounded-md border px-2 py-0.5 text-xs font-medium w-fit whitespace-nowrap shrink-0 [&>svg]:size-3 gap-1 [&>svg]:pointer-events-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive transition-[color,box-shadow] overflow-hidden\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground [a&]:hover:bg-primary/90\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground [a&]:hover:bg-secondary/90\",\n        destructive:\n          \"border-transparent bg-destructive text-white [a&]:hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/70\",\n        outline:\n          \"text-foreground [a&]:hover:bg-accent [a&]:hover:text-accent-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nfunction Badge({\n  className,\n  variant,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"span\"> &\n  VariantProps<typeof badgeVariants> & { asChild?: boolean }) {\n  const Comp = asChild ? Slot : \"span\"\n\n  return (\n    <Comp\n      data-slot=\"badge\"\n      className={cn(badgeVariants({ variant }), className)}\n      {...props}\n    />\n  )\n}\n\nexport { Badge, badgeVariants }\n"],"names":[],"mappings":";;;;;AACA;AACA;AAEA;;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB,kZACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SACE;QACJ;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAGF,SAAS,MAAM,EACb,SAAS,EACT,OAAO,EACP,UAAU,KAAK,EACf,GAAG,OAEuD;IAC1D,MAAM,OAAO,UAAU,gKAAA,CAAA,OAAI,GAAG;IAE9B,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QACzC,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 1717, "column": 0}, "map": {"version":3,"sources":["file:///home/itish/Documents/new-client/lib/dateUtils.ts"],"sourcesContent":["// src/lib/utils/dateUtils.ts\nimport { format } from \"date-fns\";\nimport { RecurrenceType } from \"@/lib/types\";\n\nexport const getRecurrenceLabel = (type: RecurrenceType) => {\n  switch (type) {\n    case \"daily\": return \"Daily\";\n    case \"weekly\": return \"Weekly\";\n    case \"monthly\": return \"Monthly\";\n    default: return \"One-time\";\n  }\n};\n\nexport const formatDateTime = (date: Date) => {\n  return format(date, \"PPpp\");\n};\n\nexport const isDateInPast = (date: Date) => {\n  return date < new Date();\n};"],"names":[],"mappings":"AAAA,6BAA6B;;;;;;AAC7B;;AAGO,MAAM,qBAAqB,CAAC;IACjC,OAAQ;QACN,KAAK;YAAS,OAAO;QACrB,KAAK;YAAU,OAAO;QACtB,KAAK;YAAW,OAAO;QACvB;YAAS,OAAO;IAClB;AACF;AAEO,MAAM,iBAAiB,CAAC;IAC7B,OAAO,CAAA,GAAA,qJAAA,CAAA,SAAM,AAAD,EAAE,MAAM;AACtB;AAEO,MAAM,eAAe,CAAC;IAC3B,OAAO,OAAO,IAAI;AACpB","debugId":null}},
    {"offset": {"line": 1749, "column": 0}, "map": {"version":3,"sources":["file:///home/itish/Documents/new-client/lib/renderUtils.ts"],"sourcesContent":["// lib/renderUtils.ts\n\nimport React from 'react';\nimport { LucideIcon } from 'lucide-react';\nimport { CheckCircle, XCircle, Clock } from 'lucide-react';\n\ninterface StatusConfig {\n  color: string;\n  icon: LucideIcon;\n  iconColor: string;\n}\n\nconst STATUS_CONFIGS: Record<string, StatusConfig> = {\n  completed: {\n    color: \"bg-emerald-900/60 text-emerald-300 border-emerald-700\",\n    icon: CheckCircle,\n    iconColor: \"text-emerald-400\"\n  },\n  failed: {\n    color: \"bg-red-900/60 text-red-300 border-red-700\",\n    icon: XCircle,\n    iconColor: \"text-red-400\"\n  },\n  default: {\n    color: \"bg-amber-900/60 text-amber-300 border-amber-700\",\n    icon: Clock,\n    iconColor: \"text-amber-400\"\n  }\n};\n\nexport const getStatusColor = (status: string): string =>\n  STATUS_CONFIGS[status]?.color || STATUS_CONFIGS.default.color;\n\nexport const getStatusIcon = (status: string): any => {\n  const config = STATUS_CONFIGS[status] || STATUS_CONFIGS.default;\n  const IconComponent: React.ComponentType<{ size?: number; className?: string }> = config.icon;\n  return (IconComponent);\n};\n"],"names":[],"mappings":"AAAA,qBAAqB;;;;;AAIrB;AAAA;AAAA;;AAQA,MAAM,iBAA+C;IACnD,WAAW;QACT,OAAO;QACP,MAAM,2NAAA,CAAA,cAAW;QACjB,WAAW;IACb;IACA,QAAQ;QACN,OAAO;QACP,MAAM,4MAAA,CAAA,UAAO;QACb,WAAW;IACb;IACA,SAAS;QACP,OAAO;QACP,MAAM,oMAAA,CAAA,QAAK;QACX,WAAW;IACb;AACF;AAEO,MAAM,iBAAiB,CAAC,SAC7B,cAAc,CAAC,OAAO,EAAE,SAAS,eAAe,OAAO,CAAC,KAAK;AAExD,MAAM,gBAAgB,CAAC;IAC5B,MAAM,SAAS,cAAc,CAAC,OAAO,IAAI,eAAe,OAAO;IAC/D,MAAM,gBAA4E,OAAO,IAAI;IAC7F,OAAQ;AACV","debugId":null}},
    {"offset": {"line": 1787, "column": 0}, "map": {"version":3,"sources":["file:///home/itish/Documents/new-client/components/scheduledTasksSection.tsx"],"sourcesContent":["// src/components/PromptScheduler/ScheduledTasksSection.tsx\nimport React from \"react\";\nimport { motion } from \"framer-motion\";\nimport { format } from \"date-fns\";\nimport { \n  CalendarIcon, \n  Trash2, \n  LucideCalendar \n} from \"lucide-react\";\n\nimport { Button } from \"@/components/ui/button\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { cn } from \"@/lib/utils\";\n\nimport { ScheduledTask, RecurrenceType } from \"@/lib/types\";\nimport { \n  getRecurrenceLabel \n} from \"@/lib/dateUtils\";\nimport { \n  getStatusColor, \n  getStatusIcon \n} from \"@/lib/renderUtils\";\n\ninterface ScheduledTasksSectionProps {\n  tasks: ScheduledTask[];\n  deleteTask: (id: string) => void;\n}\n\nexport const ScheduledTasksSection: React.FC<ScheduledTasksSectionProps> = ({\n  tasks,\n  deleteTask,\n}) => (\n  <div className=\"space-y-6\">\n    <h3 className=\"text-lg font-medium text-slate-300\">Scheduled Tasks</h3>\n\n    {tasks.length > 0 ? (\n      <div className=\"space-y-4\">\n        {tasks.map((task) => (\n          <motion.div\n            key={task.id}\n            initial={{ opacity: 0, y: 10 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.3 }}\n            className=\"border border-background bg-background/30 rounded-lg p-4\"\n          >\n            <div className=\"flex justify-between items-start mb-2\">\n              <div className=\"flex items-center\">\n                <Badge\n                  className={cn(\n                    \"mr-2\",\n                    getStatusColor(task.status)\n                  )}\n                >\n                  {/* <span className=\"flex items-center\">\n                    {getStatusIcon(task.status)}\n                    <span className=\"ml-1\">\n                      {task.status.charAt(0).toUpperCase() +\n                        task.status.slice(1)}\n                    </span>\n                  </span> */}\n                </Badge>\n                <Badge\n                  variant=\"outline\"\n                  className=\"border-slate-700 text-slate-400\"\n                >\n                  {getRecurrenceLabel(task.recurrence)}\n                </Badge>\n              </div>\n              <Button\n                variant=\"ghost\"\n                size=\"icon\"\n                className=\"h-8 w-8 text-slate-500 hover:text-red-500 hover:bg-background\"\n                onClick={() => deleteTask(task.id)}\n              >\n                <Trash2 className=\"h-4 w-4\" />\n              </Button>\n            </div>\n\n            <div className=\"mb-2 text-sm text-slate-400\">\n              <div className=\"flex items-center\">\n                <CalendarIcon className=\"h-4 w-4 mr-2 text-slate-500\" />\n                <span>{format(task.dateTime, \"PPpp\")}</span>\n              </div>\n            </div>\n\n            <div className=\"bg-background p-3 rounded-md border border-slate-700 text-slate-300 text-sm\">\n              <div className=\"line-clamp-2\">{task.prompt}</div>\n            </div>\n          </motion.div>\n        ))}\n      </div>\n    ) : (\n      <div className=\"text-center py-8 border border-dashed border-background rounded-lg\">\n        <LucideCalendar className=\"h-12 w-12 mx-auto text-slate-700 mb-2\" />\n        <h3 className=\"text-lg font-medium text-slate-400 mb-1\">\n          No scheduled tasks\n        </h3>\n        <p className=\"text-slate-500\">\n          Schedule your first task to see it here\n        </p>\n      </div>\n    )}\n  </div>\n);"],"names":[],"mappings":"AAAA,2DAA2D;;;;;AAE3D;AACA;AACA;AAAA;AAAA;AAMA;AACA;AACA;AAGA;AAGA;;;;;;;;;;AAUO,MAAM,wBAA8D,CAAC,EAC1E,KAAK,EACL,UAAU,EACX,iBACC,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAG,WAAU;0BAAqC;;;;;;YAElD,MAAM,MAAM,GAAG,kBACd,8OAAC;gBAAI,WAAU;0BACZ,MAAM,GAAG,CAAC,CAAC,qBACV,8OAAC,0LAAA,CAAA,SAAM,CAAC,GAAG;wBAET,SAAS;4BAAE,SAAS;4BAAG,GAAG;wBAAG;wBAC7B,SAAS;4BAAE,SAAS;4BAAG,GAAG;wBAAE;wBAC5B,YAAY;4BAAE,UAAU;wBAAI;wBAC5B,WAAU;;0CAEV,8OAAC;gCAAI,WAAU;;kDACb,8OAAC;wCAAI,WAAU;;0DACb,8OAAC,0HAAA,CAAA,QAAK;gDACJ,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,QACA,CAAA,GAAA,kHAAA,CAAA,iBAAc,AAAD,EAAE,KAAK,MAAM;;;;;;0DAW9B,8OAAC,0HAAA,CAAA,QAAK;gDACJ,SAAQ;gDACR,WAAU;0DAET,CAAA,GAAA,gHAAA,CAAA,qBAAkB,AAAD,EAAE,KAAK,UAAU;;;;;;;;;;;;kDAGvC,8OAAC,2HAAA,CAAA,SAAM;wCACL,SAAQ;wCACR,MAAK;wCACL,WAAU;wCACV,SAAS,IAAM,WAAW,KAAK,EAAE;kDAEjC,cAAA,8OAAC,0MAAA,CAAA,SAAM;4CAAC,WAAU;;;;;;;;;;;;;;;;;0CAItB,8OAAC;gCAAI,WAAU;0CACb,cAAA,8OAAC;oCAAI,WAAU;;sDACb,8OAAC,8MAAA,CAAA,eAAY;4CAAC,WAAU;;;;;;sDACxB,8OAAC;sDAAM,CAAA,GAAA,qJAAA,CAAA,SAAM,AAAD,EAAE,KAAK,QAAQ,EAAE;;;;;;;;;;;;;;;;;0CAIjC,8OAAC;gCAAI,WAAU;0CACb,cAAA,8OAAC;oCAAI,WAAU;8CAAgB,KAAK,MAAM;;;;;;;;;;;;uBA/CvC,KAAK,EAAE;;;;;;;;;qCAqDlB,8OAAC;gBAAI,WAAU;;kCACb,8OAAC,gNAAA,CAAA,iBAAc;wBAAC,WAAU;;;;;;kCAC1B,8OAAC;wBAAG,WAAU;kCAA0C;;;;;;kCAGxD,8OAAC;wBAAE,WAAU;kCAAiB","debugId":null}},
    {"offset": {"line": 1988, "column": 0}, "map": {"version":3,"sources":["file:///home/itish/Documents/new-client/app/dashboard/%5Btenant_id%5D/prompt/page.tsx"],"sourcesContent":["// src/components/PromptScheduler/index.tsx\n\"use client\";\n\nimport React, { useEffect, useState } from \"react\";\nimport { AlertCircle } from \"lucide-react\";\n\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardFooter,\n  CardHeader,\n  CardTitle,\n} from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\n\nimport { usePromptScheduler } from \"@/lib/usePromptScheduler\";\nimport { PromptInputSection } from \"@/components/promptInputSection\";\nimport { LogsAndResultSection } from \"@/components/logsAndResultSection\";\nimport { ScheduledTasksSection } from \"@/components/scheduledTasksSection\";\nimport { any } from \"zod\";\n\nconst PromptScheduler: React.FC = () => {\n  const {\n    date,\n    setDate,\n    error,\n    setError,\n    time,\n    setTime,\n    recurrence,\n    setRecurrence,\n    prompt,\n    setPrompt,\n    promptResponse,\n    setPromptResponse,\n    tasks,\n    logs,\n    setLogs,\n    result,\n    isSSEconnected,\n    setIsSSEconnected,\n    activeTab,\n    session_id,\n    setSession_id,\n    setActiveTab,\n    isExecuting,\n    isConnected,\n    handleExecute,\n    handleSchedule,\n    deleteTask,\n    handleConnect,\n  } = usePromptScheduler();\n\n  const [updatedLogs, setUpdatedLogs] = useState([]);\n  const [history, setHistory] = useState([]);\n\n  const backendUrl = \"http://13.203.173.137:3000\";\n  const djangoUrl = \"http://ec2-3-91-217-18.compute-1.amazonaws.com:8000\";\n\n  // Function to generate random string\n  const getRandomString = (length: number) => {\n    return [...Array(length)].map(() => Math.random().toString(36)[2]).join(\"\");\n  };\n\n  // Prompt request function\n  async function callPrompt(\n    input: string,\n    session_id: string,\n    isRerun: boolean\n  ) {\n    let updated = \"\";\n    updatedLogs.forEach((log) => {\n      if (log !== null) {\n        updated = log;\n      }\n    });\n\n    console.log(updated);\n    let requestBody = {};\n    if (isRerun) {\n      requestBody = {\n        \"input\": input,\n        \"session_id\": session_id,\n        \"rerun\": true,\n        \"history\": history,\n        \"changed\": updated,\n      };\n    } else {\n      requestBody = {\n        \"input\": input,\n        \"session_id\": session_id,\n        \"rerun\": false,\n        \"history\": [],\n        \"changed\": false,\n      };\n    }\n    try {\n      console.log(JSON.stringify(requestBody));\n      const response = await fetch(`${djangoUrl}/schedule/prompt-once/`, {\n        method: \"POST\",\n        headers: {\n          \"Content-type\": \"application/json\",\n        },\n        body: JSON.stringify(requestBody),\n      });\n      if (response.ok) {\n        const result = await response.json();\n        console.log(\"Prompt function call response: \", result);\n        return result;\n      }\n    } catch (error) {\n      console.error(\"Failed to send prompt request: \", console.error);\n    }\n  }\n\n  // Handle run prompt now\n  const handleRunTask = async (isRerun: boolean) => {\n    if (!isRerun) {\n      setHistory([]);\n      setUpdatedLogs([]);\n    }\n    console.log(`Handle run called with command : ${prompt}`);\n    setLogs([]);\n    if (prompt === \"\") {\n      setError(\"Command is required\");\n      return;\n    }\n\n    const sessid = getRandomString(10);\n    setSession_id(sessid);\n    // Log session id\n    console.log(`Session id set as ${sessid}`);\n    // Start event stream for logs\n    const waitForSSE = new Promise((resolve, reject) => {\n      const eventSource = new EventSource(`${backendUrl}/logevents/${sessid}`);\n\n      eventSource.onopen = () => {\n        console.log(\"SSE connection opened\");\n        setIsSSEconnected(true);\n        resolve(eventSource); // Resolve the promise when connected\n      };\n\n      eventSource.onmessage = (event) => {\n        const parsedData = JSON.parse(event.data);\n        console.log(\"Message received: \", parsedData);\n        if (parsedData.step_type === \"interaction_complete\") {\n          setHistory(parsedData.final_messages_state);\n        }\n\n        if (\n          parsedData.step_type !== \"interaction_complete\" ||\n          \"plan_final_response\"\n        ) {\n          if (parsedData.response) {\n            setLogs((prevLogs) => [...prevLogs, parsedData.response]);\n          }\n          if (parsedData.step_type === \"execute_action\") {\n            setLogs((prevLogs) => [\n              ...prevLogs,\n              \"Executing tool: \" +\n                parsedData.executed_action_id +\n                \"\\n\" +\n                \"Params: \" +\n                JSON.stringify(parsedData.action_parameters),\n            ]);\n          }\n        }\n      };\n\n      eventSource.onerror = (error) => {\n        console.error(\"SSE error: \", error);\n        setError(error.toString());\n        eventSource.close();\n        reject(error); // Reject the promise on error\n      };\n\n      eventSource.addEventListener(\"complete\", (event) => {\n        console.log(\"Session completed:\", event.data);\n        eventSource.close();\n        setIsSSEconnected(false);\n      });\n    });\n    // Send prompt to backend\n    try {\n      console.log(\"STARTING\");\n      const eventSource = await waitForSSE;\n      console.log(\"ISRERUN: \", isRerun);\n      const result = await callPrompt(prompt, sessid, isRerun);\n      console.log(result.message.response);\n      setPromptResponse(result.message.response);\n      return;\n    } catch (error) {\n      console.error(\"Failed to establish sse connection: \", console.error);\n    }\n  };\n\n  return (\n    <div className=\"container mx-auto p-8 bg-background\">\n      <Card className=\"border-background bg-background shadow-xl overflow-hidden\">\n        <CardHeader className=\"pb-2 border-b border-background\">\n          <CardTitle className=\"flex gap-8 items-center justify-between\">\n            <div className=\"text-4xl font-bold text-white\">\n              Prompt Scheduler\n            </div>\n            <Button onClick={handleConnect}>\n              {isConnected ? \"Connected\" : \"Connect\"}\n            </Button>\n          </CardTitle>\n          <CardDescription className=\"text-slate-400\">\n            Schedule and execute prompts with recurrence options\n          </CardDescription>\n        </CardHeader>\n\n        <CardContent className=\"p-0\">\n          <Tabs value={activeTab} onValueChange={setActiveTab} className=\"\">\n            <TabsList className=\"bg-background rounded-none grid grid-cols-3\">\n              <TabsTrigger\n                value=\"prompt\"\n                className=\"data-[state=active]:bg-slate-900 data-[state=active]:text-white\"\n              >\n                Prompt\n              </TabsTrigger>\n              <TabsTrigger\n                value=\"scheduled\"\n                className=\"data-[state=active]:bg-slate-900 data-[state=active]:text-white\"\n              >\n                Scheduled Tasks\n              </TabsTrigger>\n            </TabsList>\n\n            <TabsContent\n              value=\"prompt\"\n              className=\"p-6 bg-background text-white\"\n            >\n              <PromptInputSection\n                date={date}\n                time={time}\n                recurrence={recurrence}\n                prompt={prompt}\n                isExecuting={isExecuting}\n                isSSEconnected={isSSEconnected}\n                setIsSSEconnected={setIsSSEconnected}\n                session_id={session_id}\n                setSessionid={setSession_id}\n                promptResponse={promptResponse}\n                setPromptResponse={setPromptResponse}\n                setError={setError}\n                setLogs={setLogs}\n                setDate={setDate}\n                setTime={setTime}\n                setRecurrence={setRecurrence}\n                setPrompt={setPrompt}\n                handleExecute={handleExecute}\n                handleSchedule={handleSchedule}\n                handleRunTask={handleRunTask}\n              />\n\n              <LogsAndResultSection\n                logs={logs}\n                result={promptResponse}\n                isExecuting={isExecuting}\n                updatedLogs={updatedLogs}\n                setUpdatedLogs={setUpdatedLogs}\n                handleRunTask={handleRunTask}\n              />\n            </TabsContent>\n\n            <TabsContent\n              value=\"scheduled\"\n              className=\"p-6 bg-background text-white\"\n            >\n              <ScheduledTasksSection tasks={tasks} deleteTask={deleteTask} />\n            </TabsContent>\n          </Tabs>\n        </CardContent>\n        <CardFooter className=\"p-4 border-t border-background bg-background\">\n          <div className=\"flex items-center text-xs text-slate-500 justify-between\">\n            <div className=\"flex items-center\">\n              <AlertCircle className=\"h-3 w-3 mr-1\" />\n              <span>\n                Tasks are stored locally and will persist between sessions\n              </span>\n            </div>\n            <div>\n              {tasks.length} task{tasks.length !== 1 ? \"s\" : \"\"} scheduled\n            </div>\n          </div>\n        </CardFooter>\n      </Card>\n    </div>\n  );\n};\n\nexport default PromptScheduler;\n"],"names":[],"mappings":"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","debugId":null}}]
}