{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/itish/Documents/new-client/app/hubspot/%5Btenant_id%5D/page.tsx"],"sourcesContent":["\"use client\"\n\nimport { useState, useEffect } from \"react\"\nimport { motion, AnimatePresence } from \"framer-motion\"\nimport { Search, Check, X, ArrowUpDown, ArrowRight } from \"lucide-react\"\nimport ReactMarkdown from \"react-markdown\"  // Added for markdown formatting\n\n// Type definition for summary card\ninterface SummaryCard {\n  id: number;\n  summary: string;\n}\n\nexport default function ShipToHubspot() {\n  const [cards, setCards] = useState<SummaryCard[]>([])\n  const [searchTerm, setSearchTerm] = useState(\"\")\n  const [sortOrder, setSortOrder] = useState<\"asc\" | \"desc\">(\"asc\")\n  const [isLoading, setIsLoading] = useState(true)\n  const [error, setError] = useState<string | null>(null)\n  // State to track which cards are expanded\n  const [expandedCards, setExpandedCards] = useState<number[]>([])\n\n  // Function to send approval data to the backend\n  const sendApproval = async (content: string) => {\n    console.log(content)\n    console.log(JSON.stringify(content))\n\n    const tenant_id = localStorage.getItem(\"tenant_id\")\n    if (!tenant_id) {\n      alert(\"Tenant ID not found\")\n      return\n    }\n    try {\n      const response = await fetch(`http://ec2-3-91-217-18.compute-1.amazonaws.com:8000/hubspot/hubspotPost/${tenant_id}/`, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ \n          \"input\": content,\n          \"rerun\":false,\n          \"changed\":false,\n          \"history\":[],\n          \"session_id\":\"1223\" \n        })\n      })\n      if (response.ok) {\n        alert(\"Data sent successfully!\")\n        console.log(response)\n      } else {\n        alert(\"Failed to send data.\")\n        console.log(response)\n      }\n    } catch (error) {\n      console.error(error)\n      alert(\"An error occurred while sending data.\")\n    }\n  }\n\n  // Fetch summaries from the endpoint\n  useEffect(() => {\n    const fetchSummaries = async () => {\n      const tenant_id = localStorage.getItem(\"tenant_id\");\n      try {\n        setIsLoading(true);\n        const user_id = 'bff85ddd-d98f-44bf-b5c2-004693ed295b'; // Replace with your actual user ID or variable\n        const response = await fetch(\n          `http://ec2-3-91-217-18.compute-1.amazonaws.com:8000/hubspot/send/c7708025-2553-448e-8380-ea7bee605e0b/`,\n          {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({ \"user_id\": user_id })\n          }\n        );\n  \n        if (!response.ok) {\n          throw new Error('Failed to fetch summaries');\n        }\n  \n        const data = await response.json();\n  \n        // Transform summaries into SummaryCard format with incrementing ids\n        const fetchedCards = data.summaries.map((summary: string, index: number) => ({\n          id: index + 1,\n          summary\n        }));\n  \n        setCards(fetchedCards);\n        setError(null);\n      } catch (err) {\n        setError(err instanceof Error ? err.message : 'An unknown error occurred');\n        setCards([]);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n  \n    fetchSummaries();\n  }, []);\n\n  // Filter cards based on search term\n  const filteredCards = cards.filter((card) => \n    card.summary.toLowerCase().includes(searchTerm.toLowerCase())\n  )\n\n  // Sort cards\n  const sortedCards = [...filteredCards].sort((a, b) => {\n    if (sortOrder === \"asc\") {\n      return a.id - b.id\n    } else {\n      return b.id - a.id\n    }\n  })\n\n  // Remove card\n  const removeCard = (id: number) => {\n    setCards(cards.filter((card) => card.id !== id))\n  }\n\n  // Toggle sort order\n  const toggleSortOrder = () => {\n    setSortOrder(sortOrder === \"asc\" ? \"desc\" : \"asc\")\n  }\n\n  // Toggle expand/collapse for a given card\n  const toggleExpand = (id: number) => {\n    setExpandedCards(prev =>\n      prev.includes(id) ? prev.filter(cardId => cardId !== id) : [...prev, id]\n    )\n  }\n\n  // Render loading state\n  if (isLoading) {\n    return (\n      <div className=\"min-h-screen bg-black text-white flex items-center justify-center\">\n        <p className=\"text-gray-500\">Loading summaries...</p>\n      </div>\n    )\n  }\n\n  // Render error state\n  if (error) {\n    return (\n      <div className=\"min-h-screen bg-black text-white flex items-center justify-center\">\n        <div className=\"text-center\">\n          <p className=\"text-red-500 mb-4\">Error: {error}</p>\n          <button \n            onClick={() => window.location.reload()}\n            className=\"bg-gray-900 hover:bg-gray-800 px-4 py-2 rounded-md border border-gray-800\"\n          >\n            Retry\n          </button>\n        </div>\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"min-h-screen bg-black text-white p-6\">\n      <header className=\"max-w-7xl mx-auto mb-12\">\n        <h1 className=\"text-3xl font-medium mb-2\">Ship to Hubspot</h1>\n        <p className=\"text-gray-500 text-sm mb-8\">Sync your data with Hubspot CRM</p>\n\n        {/* Search and Sort Bar */}\n        <div className=\"flex flex-col sm:flex-row gap-4 mb-8\">\n          <div className=\"relative flex-grow\">\n            <div className=\"absolute inset-y-0 left-0 flex items-center pl-3 pointer-events-none\">\n              <Search className=\"h-4 w-4 text-gray-500\" />\n            </div>\n            <input\n              type=\"text\"\n              className=\"bg-gray-900 text-white w-full pl-10 pr-4 py-2 rounded-md border border-gray-800 focus:outline-none focus:border-emerald-600 focus:ring-1 focus:ring-emerald-600 text-sm transition-all\"\n              placeholder=\"Search cards...\"\n              value={searchTerm}\n              onChange={(e) => setSearchTerm(e.target.value)}\n            />\n          </div>\n          <motion.button\n            className=\"flex items-center justify-center gap-2 bg-gray-900 hover:bg-gray-800 px-4 py-2 rounded-md border border-gray-800 text-sm transition-colors\"\n            whileTap={{ scale: 0.98 }}\n            onClick={toggleSortOrder}\n          >\n            <ArrowUpDown className=\"h-4 w-4\" />\n            <span>Sort {sortOrder === \"asc\" ? \"Ascending\" : \"Descending\"}</span>\n          </motion.button>\n        </div>\n      </header>\n\n      {/* Cards Grid */}\n      <div className=\"max-w-7xl mx-auto grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n        <AnimatePresence>\n          {sortedCards.map((card) => {\n            const isExpanded = expandedCards.includes(card.id)\n            const preview =\n              card.summary.length > 200 ? card.summary.slice(0, 200) + \"...\" : card.summary\n            return (\n              <motion.div\n                key={card.id}\n                initial={{ opacity: 0, y: 10 }}\n                animate={{ opacity: 1, y: 0 }}\n                exit={{ opacity: 0, scale: 0.98 }}\n                transition={{ duration: 0.2 }}\n                className=\"group bg-gray-900 border border-gray-800 rounded-md overflow-hidden hover:border-emerald-600/50 transition-all duration-200\"\n              >\n                <div className=\"p-5\">\n                  <div className=\"flex items-center justify-between mb-4\">\n                    <div className=\"flex items-center\">\n                      <div className=\"h-2 w-2 rounded-full bg-emerald-500 mr-2\"></div>\n                      <span className=\"text-xs text-emerald-500 font-medium\">Hubspot Entry</span>\n                    </div>\n                    <span className=\"text-xs text-gray-500\">#{card.id}</span>\n                  </div>\n\n                  {/* Render summary with extra spacing */}\n                  <motion.div layout className=\"prose prose-invert mt-4 mb-4\">\n                    <ReactMarkdown>\n                      {isExpanded ? card.summary : preview}\n                    </ReactMarkdown>\n                  </motion.div>\n\n                  <div className=\"flex justify-between items-center mt-4\">\n                    <motion.button\n                      className=\"text-xs text-gray-500 hover:text-emerald-500 flex items-center gap-1 transition-colors\"\n                      whileHover={{ x: 2 }}\n                      onClick={() => toggleExpand(card.id)}\n                    >\n                      {isExpanded ? \"Collapse\" : \"View details\"} <ArrowRight className=\"h-3 w-3\" />\n                    </motion.button>\n\n                    <div className=\"flex gap-2\">\n                      <motion.button\n                        className=\"p-1.5 rounded-md bg-gray-800 hover:bg-emerald-900 text-emerald-500 transition-colors\"\n                        whileTap={{ scale: 0.95 }}\n                        aria-label=\"Approve\"\n                        onClick={() => sendApproval(card.summary)}\n                      >\n                        <Check className=\"h-4 w-4\" />\n                      </motion.button>\n                      <motion.button\n                        className=\"p-1.5 rounded-md bg-gray-800 hover:bg-red-900 text-red-500 transition-colors\"\n                        whileTap={{ scale: 0.95 }}\n                        onClick={() => removeCard(card.id)}\n                        aria-label=\"Remove\"\n                      >\n                        <X className=\"h-4 w-4\" />\n                      </motion.button>\n                    </div>\n                  </div>\n                </div>\n              </motion.div>\n            )\n          })}\n        </AnimatePresence>\n      </div>\n\n      {/* Empty state */}\n      {sortedCards.length === 0 && (\n        <motion.div\n          initial={{ opacity: 0 }}\n          animate={{ opacity: 1 }}\n          className=\"max-w-md mx-auto text-center py-12 px-6 bg-gray-900 rounded-md border border-gray-800\"\n        >\n          <div className=\"inline-flex justify-center items-center p-3 rounded-full bg-gray-800 mb-4\">\n            <Search className=\"h-5 w-5 text-gray-500\" />\n          </div>\n          <p className=\"text-gray-300 text-sm font-medium mb-2\">No matching entries found</p>\n          <p className=\"text-gray-500 text-xs mb-4\">Try adjusting your search criteria</p>\n          <button\n            className=\"text-xs text-emerald-500 border border-emerald-800 rounded-md px-3 py-1.5 hover:bg-emerald-900/20 transition-colors\"\n            onClick={() => setSearchTerm(\"\")}\n          >\n            Clear search\n          </button>\n        </motion.div>\n      )}\n    </div>\n  )\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}